# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-09-11 17:06
from __future__ import unicode_literals

import logging

from django.conf import settings
from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations

logger = logging.getLogger(__name__)


def forwards_func(apps, schema_editor):
    Subject = apps.get_model('course_metadata', 'Subject')
    SubjectTranslation = apps.get_model('course_metadata', 'SubjectTranslation')

    for subject in Subject.objects.all():
        try:
            translations = SubjectTranslation.objects.filter(master_id=subject.pk)
            for translation in translations:
                translation.name = translation.name_t
                translation.subtitle = translation.subtitle_t
                translation.description = translation.description_t
                translation.save()  # Note this only calls Model.save()
        except ObjectDoesNotExist:
            # nothing to migrate
            logger.exception('Migrating data from SubjectTranslation for master_id={} DoesNotExist'.format(subject.pk))


def backwards_func(apps, schema_editor):
    Subject = apps.get_model('course_metadata', 'Subject')
    SubjectTranslation = apps.get_model('course_metadata', 'SubjectTranslation')

    for subject in Subject.objects.all():
        try:
            translations = SubjectTranslation.objects.filter(master_id=subject.pk)
            for translation in translations:
                translation.name_t = translation.name
                translation.subtitle_t = translation.subtitle
                translation.description_t = translation.description
                translation.save()  # Note this only calls Model.save()
        except ObjectDoesNotExist:
            # nothing to migrate
            logger.exception('Migrating data from SubjectTranslation for master_id={} DoesNotExist'.format(subject.pk))


class Migration(migrations.Migration):
    dependencies = [
        ('course_metadata', '0063_auto_20171005_1931'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
    ]
